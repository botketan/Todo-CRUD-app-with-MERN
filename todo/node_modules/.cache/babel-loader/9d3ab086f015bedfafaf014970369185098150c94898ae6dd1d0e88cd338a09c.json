{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    Axios.get(url.then(res => {\n      if (!res.ok) {\n        throw Error('could not fetch the data for that resource');\n      }\n      return res.json();\n    }).then(data => {\n      setIsPending(false);\n      setData(data);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('fetch aborted');\n      } else {\n        setIsPending(false);\n        setError(err.message);\n      }\n    }));\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","Axios","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","get","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["C:/Users/ketan/Desktop/Coding/React projects/todo/src/useFecth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n      Axios.get(url\r\n      .then(res => {\r\n        if (!res.ok) { \r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('fetch aborted')\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      }))\r\n\r\n    return () => abortCont.abort();\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n\r\n \r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,IAAIC,eAAe,EAAE;IAErCV,KAAK,CAACW,GAAG,CAACT,GAAG,CACZU,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC3D;MACA,OAAOF,GAAG,CAACG,IAAI,EAAE;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACT,IAAI,IAAI;MACZG,YAAY,CAAC,KAAK,CAAC;MACnBF,OAAO,CAACD,IAAI,CAAC;MACbK,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAI;MACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;QAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,MAAM;QACLf,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACU,GAAG,CAACI,OAAO,CAAC;MACvB;IACF,CAAC,CAAC,CAAC;IAEL,OAAO,MAAMb,SAAS,CAACc,KAAK,EAAE;EAChC,CAAC,EAAE,CAACrB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAA,GAjCKN,QAAQ;AAoCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}